nclust <- length(s$geese$clusz)
gof = c(n, nclust)
gof.names = c("Num. obs.", "Num. clust.")
tr <- createTexreg(
coef.names = names,
coef = co,
se = se,
pvalues = pval,
gof.names = gof.names,
gof = gof,
gof.decimal = rep(FALSE, length(gof))
)
return(tr)
}
logitgee.1.d = extract.geepack(logitgee.1)
# DONT TOUCH
# Recurrent Events: Income Tax AND Democracy
# WORKING MODEL
cox2.ag = coxph(Surv(year, dem.tax) ~ log(constmanufact) + log(constagricult) + log(urbpop) + cluster(country),
data=ag.data
)
# DO NOT TOUCH
# WORKING MODEL for clogit
clogit.1 = clogit(incometax.d ~  log(constmanufact) + log(constagricult) +strata(country), method= "efron", data = data)
#### TRY texreg PACKAGE
library(texreg) # install.packages("texreg")
# screenreg
texreg(
list(cox1.tt, cox2, cox.L, clogit.1, cox2.ag, logitgee.1.d),
caption = "Structural Origins of Income Taxation",
custom.coef.names = c(
"Manufacture Output$_{tt}$",
"Agricultural Output$_{tt}$",
"Manufacture Output  (ln)",
"Agricultural Output (ln)",
"Total Population  (ln)",
"Manufacture Output$_{t-1}$  (ln)",
"Agricultural Output$_{t-1}$  (ln)",
"Urban Population  (ln)",
"(intercept)"
),
custom.model.names = c(
"Cox-PH",
"Cox-PH",
"Cox-PH: Lagged",
"Conditional Logit",
"Cox-PH: Andersen-Gill",
"Logit GEE"),
label = "results:1",
custom.note = "%stars. Robust Standard Errors in All Models",
fontsize = "scriptsize",
float.pos = "h"
)
extract.geepack
setMethod("extract", signature = className("geeglm", "geepack"),
definition = extract.geepack)
logitgee.1.d = extract.geepack(logitgee.1)
# DONT TOUCH
# Recurrent Events: Income Tax AND Democracy
# WORKING MODEL
cox2.ag = coxph(Surv(year, dem.tax) ~ log(constmanufact) + log(constagricult) + log(urbpop) + cluster(country),
data=ag.data
)
# DO NOT TOUCH
# WORKING MODEL for clogit
clogit.1 = clogit(incometax.d ~  log(constmanufact) + log(constagricult) +strata(country), method= "efron", data = data)
#### TRY texreg PACKAGE
library(texreg) # install.packages("texreg")
# screenreg
texreg(
list(cox1.tt, cox2, cox.L, clogit.1, cox2.ag, logitgee.1.d),
caption = "Structural Origins of Income Taxation",
custom.coef.names = c(
"Manufacture Output$_{tt}$",
"Agricultural Output$_{tt}$",
"Manufacture Output  (ln)",
"Agricultural Output (ln)",
"Total Population  (ln)",
"Manufacture Output$_{t-1}$  (ln)",
"Agricultural Output$_{t-1}$  (ln)",
"Urban Population  (ln)",
"(intercept)"
),
custom.model.names = c(
"Cox-PH",
"Cox-PH",
"Cox-PH: Lagged",
"Conditional Logit",
"Cox-PH: Andersen-Gill",
"Logit GEE"),
label = "results:1",
custom.note = "%stars. Robust Standard Errors in All Models",
fontsize = "scriptsize",
float.pos = "h"
)
# screenreg / texreg
screenreg(
list(cox1.tt, cox2, cox.L, clogit.1, cox2.ag, logitgee.1.d),
caption = "Structural Origins of Income Taxation",
custom.coef.names = c(
"Manufacture Output$_{tt}$",
"Agricultural Output$_{tt}$",
"Manufacture Output  (ln)",
"Agricultural Output (ln)",
"Total Population  (ln)",
"Manufacture Output$_{t-1}$  (ln)",
"Agricultural Output$_{t-1}$  (ln)",
"Urban Population  (ln)",
"(intercept)"
),
custom.model.names = c(
"Cox-PH",
"Cox-PH",
"Cox-PH: Lagged",
"Conditional Logit",
"Cox-PH: Andersen-Gill",
"Logit GEE"),
label = "results:1",
custom.note = "%stars. Robust Standard Errors in All Models",
fontsize = "scriptsize",
float.pos = "h"
)
?texreg
1:6
screenreg(
list(cox1.tt, cox2, cox.L, clogit.1, cox2.ag, logitgee.1.d),
caption = "Structural Origins of Income Taxation",
custom.coef.names = c(
"Manufacture Output$_{tt}$",
"Agricultural Output$_{tt}$",
"Manufacture Output  (ln)",
"Agricultural Output (ln)",
"Total Population  (ln)",
"Manufacture Output$_{t-1}$  (ln)",
"Agricultural Output$_{t-1}$  (ln)",
"Urban Population  (ln)",
"(intercept)"
),
custom.model.names = c(
"Cox-PH",
"Cox-PH",
"Cox-PH: Lagged",
"Conditional Logit",
"Cox-PH: Andersen-Gill",
"Logit GEE"),
label = "results:1",
custom.columns = list(type=c(1:6)),
custom.note = "%stars. Robust Standard Errors in All Models",
fontsize = "scriptsize",
float.pos = "h"
)
screenreg(
list(cox1.tt, cox2, cox.L, clogit.1, cox2.ag, logitgee.1.d),
caption = "Structural Origins of Income Taxation",
custom.coef.names = c(
"Manufacture Output$_{tt}$",
"Agricultural Output$_{tt}$",
"Manufacture Output  (ln)",
"Agricultural Output (ln)",
"Total Population  (ln)",
"Manufacture Output$_{t-1}$  (ln)",
"Agricultural Output$_{t-1}$  (ln)",
"Urban Population  (ln)",
"(intercept)"
),
custom.model.names = c(
"Cox-PH",
"Cox-PH",
"Cox-PH: Lagged",
"Conditional Logit",
"Cox-PH: Andersen-Gill",
"Logit GEE"),
label = "results:1",
dcolumn = T,
custom.note = "%stars. Robust Standard Errors in All Models",
fontsize = "scriptsize",
float.pos = "h"
)
screenreg(
list(cox1.tt, cox2, cox.L, clogit.1, cox2.ag, logitgee.1.d),
caption = "Structural Origins of Income Taxation",
custom.coef.names = c(
"Manufacture Output$_{tt}$",
"Agricultural Output$_{tt}$",
"Manufacture Output  (ln)",
"Agricultural Output (ln)",
"Total Population  (ln)",
"Manufacture Output$_{t-1}$  (ln)",
"Agricultural Output$_{t-1}$  (ln)",
"Urban Population  (ln)",
"(intercept)"
),
custom.model.names = c(
"Cox-PH",
"Cox-PH",
"Cox-PH: Lagged",
"Conditional Logit",
"Cox-PH: Andersen-Gill",
"Logit GEE"),
label = "results:1",
dcolumn = T,
booktabs = T,
custom.note = "%stars. Robust Standard Errors in All Models",
fontsize = "scriptsize",
float.pos = "h"
)
cox3.p = survfit(Surv(year, incometax.s) ~ constmanufact + constagricult + totpop,
data=cox
)
survfit(cox3.p, newdata=data.frame(constmanufact=50))
cox3.p = coxph(Surv(year, incometax.s) ~ constmanufact + constagricult + totpop,
data=cox
)
survfit(cox3.p, newdata=data.frame(constmanufact=50))
?survfit
quantile(cox3.p)
constmanufact=50
survfit(cox3.p, newdata=data.frame(cox$constmanufact<50))
cox3.p
survfit(cox3.p, newdata=data.frame(cox$constmanufact=50))
survfit(cox3.p, newdata=data.frame(cox$constmanufact==50))
plot(survfit(cox3.p, newdata=data.frame(constmanufact=50)),
xlab = "Years", ylab="Survival")
summary(cox$constmanufact)
plot(cox3.p)
out <- contrasts(mgustest$agecat)[as.numeric(mgustest$agecat),]
colnames(out) <- paste("agecat",colnames(out),sep="")
out <- apply(out,2, as.logical)
mgustest <- data.frame(mgustest, out)
names(mgustest) #variable names to use in mfit3
prop.table(table(mgustest$agecat)) #proportions to use as reference values
#coxph with three dummy variables instead of "agecat"
mfit3 <- coxph(Surv(futime, death) ~ agecat.55.64. + agecat.64.72. + agecat.72.90. + albcat,
data=mgustest)
#newdata data frame specifying proportion for each of the dummy variables
mfit.refs3 <- data.frame("agecat.55.64."=prop.table(table(mgustest$agecat))[[2]],
"agecat.64.72."=prop.table(table(mgustest$agecat))[[3]],
"agecat.72.90."=prop.table(table(mgustest$agecat))[[4]],
"albcat"=c('(1.8,3]','(3,3.2]','(3.2,3.5]','(3.5,5.1]'))
#final plot
plot(survfit(mfit3, newdata=mfit.refs3), col=c("black","red","blue","green"))
out <- contrasts(mgustest$agecat)[as.numeric(mgustest$agecat),]
colnames(out) <- paste("agecat",colnames(out),sep="")
out <- apply(out,2, as.logical)
mgustest <- data.frame(mgustest, out)
names(mgustest) #variable names to use in mfit3
prop.table(table(mgustest$agecat)) #proportions to use as reference values
#coxph with three dummy variables instead of "agecat"
mfit3 <- coxph(Surv(futime, death) ~ agecat.55.64. + agecat.64.72. + agecat.72.90. + albcat,
data=mgustest)
#newdata data frame specifying proportion for each of the dummy variables
mfit.refs3 <- data.frame("agecat.55.64."=prop.table(table(mgustest$agecat))[[2]],
"agecat.64.72."=prop.table(table(mgustest$agecat))[[3]],
"agecat.72.90."=prop.table(table(mgustest$agecat))[[4]],
"albcat"=c('(1.8,3]','(3,3.2]','(3.2,3.5]','(3.5,5.1]'))
#final plot
plot(survfit(mfit3, newdata=mfit.refs3), col=c("black","red","blue","green"))
out <- contrasts(mgustest$agecat)[as.numeric(mgustest$agecat),]
mfit.refs2 <- data.frame(
"agecat"=c(rep('(34,55]', 8),rep('(55,64]',8),rep('(64,72]', 8),rep('(72,90]', 8)),
"albcat"=rep(c('(1.8,3]','(3,3.2]','(3.2,3.5]','(3.5,5.1]'), 4))
out <- contrasts(mgustest$agecat)[as.numeric(mgustest$agecat),]
mfit2 <- coxph(Surv(futime, death) ~ agecat + albcat, data=mgustest)
plot(survfit(mfit2, newdata=mfit.refs2), col=c("black","red","blue","green"))
?predict.coxph
predict(cox3.p)
predict(cox3.p,type="expected",se.fit=TRUE)
head(predict(cox3.p,type="expected",se.fit=TRUE))
cox$predicted= predict(cox3.p, type="expected", se.fit=TRUE)
cox3.p.d= data.frame(predict(cox3.p, type="expected", se.fit=TRUE))
View(cox3.p.d)
cox= cbind(cox3.p.d, cox)
View(cox)
cox.predicted= cbind(cox3.p.d, cox)
?predict
predict.coxph
?predict.coxph
cox3.p.d= data.frame(predict(cox3.p, type="expected", se.fit=TRUE, reference="strata"))
cox.predicted= cbind(cox3.p.d, cox)
View(cox.predicted)
cox3.p.d= data.frame(predict(cox3.p, type="expected", se.fit=TRUE, reference="sample"))
cox.predicted= cbind(cox3.p.d, cox)
termplot(cox3.p)
sum(predict(cox3.p,type="expected"), na.rm=TRUE)
predict(cox3.p,type="expected")
sum(predict(cox3.p,type="expected"), na.rm=TRUE)
summary(survfit(cox3.p), time=5)
summary(survfit(cox3.p), time=5, constmanufact=60)
summary(survfit(cox3.p), constmanufact=60)
summary(survfit(cox3.p), constmanufact=quantile(cox$constmanufact, .15))
summary(survfit(cox3.p), constmanufact=quantile(cox$constmanufact, .75))
summary(survfit(cox3.p))
summary(survfit(cox3.p), time = 2)
summary(survfit(cox3.p), time = 3)
summary(survfit(cox3.p), time = 10)
str(summary(survfit(cox3.p), time = 10))
str(summary(survfit(cox3.p), time = 2))
summary(survfit(cox3.p), time=5)$surv
summary(survfit(cox3.p), time=10)$surv
summary(survfit(cox3.p), time=1)$surv
summary(survfit(cox3.p), time=20)$surv
?texreg
setMethod("extract", signature = className("geeglm", "geepack"),
definition = extract.geepack)
extract.geepack <- function(model) {
s <- summary(model)
names <- rownames(s$coef)
co <- s$coef[, 1]
se <- s$coef[, 2]
pval <- s$coef[, 4]
n <- nrow(model.frame(model))
nclust <- length(s$geese$clusz)
gof = c(n, nclust)
gof.names = c("Num. obs.", "Num. clust.")
tr <- createTexreg(
coef.names = names,
coef = co,
se = se,
pvalues = pval,
gof.names = gof.names,
gof = gof,
gof.decimal = rep(FALSE, length(gof))
)
return(tr)
}
logitgee.1.d = extract.geepack(logitgee.1)
cat("\014")
rm(list=ls())
# Start Fresh
cat("\014")
rm(list=ls())
setwd("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption")
# Load Datasets
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/incometax_data.RData") # Load data
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/cox.RData") # Cox
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/L_cox.RData") # Lagged Data for Cox
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/logitgee.RData") # Logit GEE
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/ag_data.RData") # For Multiple Non Competing Hazard Ratios
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/l_clogit.RData") # Lagged CONSTANT AGR MANUFACT for clogit  (fixed effects)
# Loading/Installing Library
# install.packages("survival")
library(survival) # Cox Models
# DO NOT TOUCH
# Model with time-transformed variables
cox1.tt = coxph(Surv(year, incometax.s) ~ tt(constmanufact) + tt(constagricult) + cluster(country),
data=cox, x=T
)
# DO NOT TOUCH
# WORKING MODEL
cox2 = coxph(Surv(year, incometax.s) ~ log(constmanufact) + log(constagricult) + log(totpop) + cluster(country),
data=cox
)
# DO NOT TOUCH
# LAGGED MODEL
cox.L = coxph(Surv(year, incometax.s) ~ log(constmanufact.L) + log(constagricult.L) + log(totpop) + cluster(country),
data=L.cox)
library(geepack) # install.packages("geepack")
## logit GEE
logitgee.1 = geeglm(incometax.d ~ log(constmanufact) + log(constagricult) + log(totpop),
family = binomial,
id = country,
corstr = "exchangeable",
data = logitgee)
## ---- texreg-extractor-geeglm ----
extract.geepack <- function(model) {
s <- summary(model)
names <- rownames(s$coef)
co <- s$coef[, 1]
se <- s$coef[, 2]
pval <- s$coef[, 4]
n <- nrow(model.frame(model))
nclust <- length(s$geese$clusz)
gof = c(n, nclust)
gof.names = c("Num. obs.", "Num. clust.")
tr <- createTexreg(
coef.names = names,
coef = co,
se = se,
pvalues = pval,
gof.names = gof.names,
gof = gof,
gof.decimal = rep(FALSE, length(gof))
)
return(tr)
}
setMethod("extract", signature = className("geeglm", "geepack"),
definition = extract.geepack)
logitgee.1.d = extract.geepack(logitgee.1)
# Load Datasets
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/incometax_data.RData") # Load data
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/cox.RData") # Cox
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/L_cox.RData") # Lagged Data for Cox
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/logitgee.RData") # Logit GEE
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/ag_data.RData") # For Multiple Non Competing Hazard Ratios
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/l_clogit.RData") # Lagged CONSTANT AGR MANUFACT for clogit  (fixed effects)
# Loading/Installing Library
# install.packages("survival")
library(survival) # Cox Models
# DO NOT TOUCH
# Model with time-transformed variables
cox1.tt = coxph(Surv(year, incometax.s) ~ tt(constmanufact) + tt(constagricult) + cluster(country),
data=cox, x=T
)
# DO NOT TOUCH
# WORKING MODEL
cox2 = coxph(Surv(year, incometax.s) ~ log(constmanufact) + log(constagricult) + log(totpop) + cluster(country),
data=cox
)
# DO NOT TOUCH
# LAGGED MODEL
cox.L = coxph(Surv(year, incometax.s) ~ log(constmanufact.L) + log(constagricult.L) + log(totpop) + cluster(country),
data=L.cox)
library(geepack) # install.packages("geepack")
## logit GEE
logitgee.1 = geeglm(incometax.d ~ log(constmanufact) + log(constagricult) + log(totpop),
family = binomial,
id = country,
corstr = "exchangeable",
data = logitgee)
## ---- texreg-extractor-geeglm ----
extract.geepack <- function(model) {
s <- summary(model)
names <- rownames(s$coef)
co <- s$coef[, 1]
se <- s$coef[, 2]
pval <- s$coef[, 4]
n <- nrow(model.frame(model))
nclust <- length(s$geese$clusz)
gof = c(n, nclust)
gof.names = c("Num. obs.", "Num. clust.")
tr <- createTexreg(
coef.names = names,
coef = co,
se = se,
pvalues = pval,
gof.names = gof.names,
gof = gof,
gof.decimal = rep(FALSE, length(gof))
)
return(tr)
}
setMethod("extract", signature = className("geeglm", "geepack"),
definition = extract.geepack)
logitgee.1.d = extract.geepack(logitgee.1)
# Start Fresh
cat("\014")
rm(list=ls())
# Start Fresh
cat("\014")
rm(list=ls())
# Start Fresh
cat("\014")
rm(list=ls())
# Start Fresh
rm(list=ls())
cat("\014")
# Load Datasets
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/incometax_data.RData") # Load data
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/cox.RData") # Cox
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/L_cox.RData") # Lagged Data for Cox
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/logitgee.RData") # Logit GEE
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/ag_data.RData") # For Multiple Non Competing Hazard Ratios
load("/Users/hectorbahamonde/RU/Dissertation/Papers/IncomeTaxAdoption/l_clogit.RData") # Lagged CONSTANT AGR MANUFACT for clogit  (fixed effects)
# Loading/Installing Library
# install.packages("survival")
library(survival) # Cox Models
# DO NOT TOUCH
# Model with time-transformed variables
cox1.tt = coxph(Surv(year, incometax.s) ~ tt(constmanufact) + tt(constagricult) + cluster(country),
data=cox, x=T
)
# DO NOT TOUCH
# WORKING MODEL
cox2 = coxph(Surv(year, incometax.s) ~ log(constmanufact) + log(constagricult) + log(totpop) + cluster(country),
data=cox
)
# DO NOT TOUCH
# LAGGED MODEL
cox.L = coxph(Surv(year, incometax.s) ~ log(constmanufact.L) + log(constagricult.L) + log(totpop) + cluster(country),
data=L.cox)
library(geepack) # install.packages("geepack")
## logit GEE
logitgee.1 = geeglm(incometax.d ~ log(constmanufact) + log(constagricult) + log(totpop),
family = binomial,
id = country,
corstr = "exchangeable",
data = logitgee)
## ---- texreg-extractor-geeglm ----
extract.geepack <- function(model) {
s <- summary(model)
names <- rownames(s$coef)
co <- s$coef[, 1]
se <- s$coef[, 2]
pval <- s$coef[, 4]
n <- nrow(model.frame(model))
nclust <- length(s$geese$clusz)
gof = c(n, nclust)
gof.names = c("Num. obs.", "Num. clust.")
tr <- createTexreg(
coef.names = names,
coef = co,
se = se,
pvalues = pval,
gof.names = gof.names,
gof = gof,
gof.decimal = rep(FALSE, length(gof))
)
return(tr)
}
setMethod("extract", signature = className("geeglm", "geepack"),
definition = extract.geepack)
logitgee.1.d = extract.geepack(logitgee.1)
